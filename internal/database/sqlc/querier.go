// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package sqlc

import (
	"context"
)

type Querier interface {
	CountUsers(ctx context.Context, db DBTX, vendorID string) (int64, error)
	CreateAuthSession(ctx context.Context, db DBTX, arg *CreateAuthSessionParams) (*AuthSession, error)
	CreateAuthUser(ctx context.Context, db DBTX, arg *CreateAuthUserParams) (*CreateAuthUserRow, error)
	CreateOrg(ctx context.Context, db DBTX, arg *CreateOrgParams) (*Org, error)
	CreateRole(ctx context.Context, db DBTX, arg *CreateRoleParams) (*Role, error)
	CreateUser(ctx context.Context, db DBTX, arg *CreateUserParams) (*CreateUserRow, error)
	CreateVerificationToken(ctx context.Context, db DBTX, arg *CreateVerificationTokenParams) (*VerificationToken, error)
	DeactivateAuthSession(ctx context.Context, db DBTX, id string) error
	DeactivateExpiredSessions(ctx context.Context, db DBTX) error
	DeactivateRole(ctx context.Context, db DBTX, id string) error
	DeactivateUser(ctx context.Context, db DBTX, id string) error
	DeactivateUserSessions(ctx context.Context, db DBTX, userID string) error
	DeleteExpiredTokens(ctx context.Context, db DBTX) error
	DeleteVerificationToken(ctx context.Context, db DBTX, id string) error
	FindUserByEmail(ctx context.Context, db DBTX, arg *FindUserByEmailParams) (*FindUserByEmailRow, error)
	FindUserByID(ctx context.Context, db DBTX, id string) (*FindUserByIDRow, error)
	GetAuthSessionByID(ctx context.Context, db DBTX, id string) (*AuthSession, error)
	GetAuthSessionByToken(ctx context.Context, db DBTX, refreshTokenHash string) (*AuthSession, error)
	GetOrgByActivationCode(ctx context.Context, db DBTX, activationCode *string) (*Org, error)
	GetOrgByID(ctx context.Context, db DBTX, id string) (*Org, error)
	GetRoleByID(ctx context.Context, db DBTX, id string) (*Role, error)
	GetUserActiveSessions(ctx context.Context, db DBTX, userID string) ([]*AuthSession, error)
	GetUserByEmail(ctx context.Context, db DBTX, arg *GetUserByEmailParams) (*User, error)
	GetUserByID(ctx context.Context, db DBTX, id string) (*GetUserByIDRow, error)
	GetVerificationToken(ctx context.Context, db DBTX, id string) (*VerificationToken, error)
	ListRolesByOrg(ctx context.Context, db DBTX, orgID string) ([]*Role, error)
	ListUsers(ctx context.Context, db DBTX, arg *ListUsersParams) ([]*ListUsersRow, error)
	UpdateAuthSessionLastUsed(ctx context.Context, db DBTX, id string) error
	UpdateOrg(ctx context.Context, db DBTX, arg *UpdateOrgParams) (*Org, error)
	UpdateRole(ctx context.Context, db DBTX, arg *UpdateRoleParams) (*Role, error)
	UpdateUser(ctx context.Context, db DBTX, arg *UpdateUserParams) (*UpdateUserRow, error)
	UpdateUserPassword(ctx context.Context, db DBTX, arg *UpdateUserPasswordParams) error
}

var _ Querier = (*Queries)(nil)
