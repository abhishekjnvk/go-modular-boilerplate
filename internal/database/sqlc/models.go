// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package sqlc

import (
	"github.com/jackc/pgx/v5/pgtype"
)

type AuthSession struct {
	ID               string             `db:"id" json:"id"`
	UserID           string             `db:"user_id" json:"user_id"`
	RefreshTokenHash string             `db:"refresh_token_hash" json:"refresh_token_hash"`
	IpAddress        string             `db:"ip_address" json:"ip_address"`
	DeviceName       *string            `db:"device_name" json:"device_name"`
	UserAgent        *string            `db:"user_agent" json:"user_agent"`
	OsInfo           *string            `db:"os_info" json:"os_info"`
	IsActive         *bool              `db:"is_active" json:"is_active"`
	CreatedAt        pgtype.Timestamptz `db:"created_at" json:"created_at"`
	ExpiresAt        pgtype.Timestamptz `db:"expires_at" json:"expires_at"`
}

type Org struct {
	ID                   string             `db:"id" json:"id"`
	Name                 string             `db:"name" json:"name"`
	ActivationCode       *string            `db:"activation_code" json:"activation_code"`
	VendorID             string             `db:"vendor_id" json:"vendor_id"`
	WebsiteUrl           *string            `db:"website_url" json:"website_url"`
	CreatedBy            string             `db:"created_by" json:"created_by"`
	CreatedAt            pgtype.Timestamptz `db:"created_at" json:"created_at"`
	SubscriptionGraceDay *int32             `db:"subscription_grace_day" json:"subscription_grace_day"`
}

type Role struct {
	ID          string             `db:"id" json:"id"`
	Name        string             `db:"name" json:"name"`
	Permissions []byte             `db:"permissions" json:"permissions"`
	OrgID       string             `db:"org_id" json:"org_id"`
	IsActive    *bool              `db:"is_active" json:"is_active"`
	IsAdmin     *bool              `db:"is_admin" json:"is_admin"`
	DataHash    *string            `db:"data_hash" json:"data_hash"`
	Description *string            `db:"description" json:"description"`
	VendorID    *string            `db:"vendor_id" json:"vendor_id"`
	CreatedBy   string             `db:"created_by" json:"created_by"`
	CreatedAt   pgtype.Timestamptz `db:"created_at" json:"created_at"`
}

type SsoConfig struct {
	ID                    string             `db:"id" json:"id"`
	OrgID                 string             `db:"org_id" json:"org_id"`
	ClientID              string             `db:"client_id" json:"client_id"`
	ClientSecret          string             `db:"client_secret" json:"client_secret"`
	DiscoveryUrl          *string            `db:"discovery_url" json:"discovery_url"`
	Issuer                string             `db:"issuer" json:"issuer"`
	ForceSsoOnly          *bool              `db:"force_sso_only" json:"force_sso_only"`
	AutoSignup            *bool              `db:"auto_signup" json:"auto_signup"`
	AuthorizationEndpoint string             `db:"authorization_endpoint" json:"authorization_endpoint"`
	TokenEndpoint         string             `db:"token_endpoint" json:"token_endpoint"`
	UserinfoEndpoint      *string            `db:"userinfo_endpoint" json:"userinfo_endpoint"`
	JwksUri               string             `db:"jwks_uri" json:"jwks_uri"`
	ScopesSupported       *string            `db:"scopes_supported" json:"scopes_supported"`
	IsActive              bool               `db:"is_active" json:"is_active"`
	CreatedAt             pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt             pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
}

type User struct {
	ID                string             `db:"id" json:"id"`
	Name              *string            `db:"name" json:"name"`
	Email             string             `db:"email" json:"email"`
	PasswordHash      string             `db:"password_hash" json:"password_hash"`
	EmailVerified     *bool              `db:"email_verified" json:"email_verified"`
	VendorID          string             `db:"vendor_id" json:"vendor_id"`
	Country           *string            `db:"country" json:"country"`
	City              *string            `db:"city" json:"city"`
	IsActive          *bool              `db:"is_active" json:"is_active"`
	IsDisabled        *bool              `db:"is_disabled" json:"is_disabled"`
	EnableSocialLogin *bool              `db:"enable_social_login" json:"enable_social_login"`
	SignupSource      *string            `db:"signup_source" json:"signup_source"`
	CreatedAt         pgtype.Timestamptz `db:"created_at" json:"created_at"`
}

type VerificationToken struct {
	ID        string             `db:"id" json:"id"`
	UserID    string             `db:"user_id" json:"user_id"`
	TokenType string             `db:"token_type" json:"token_type"`
	CreatedAt pgtype.Timestamptz `db:"created_at" json:"created_at"`
	ValidTill pgtype.Timestamptz `db:"valid_till" json:"valid_till"`
}
